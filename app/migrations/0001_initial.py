# Generated by Django 5.0.7 on 2025-09-11 13:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='اسم الشركة')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='معرف الشركة')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='البريد الإلكتروني')),
                ('phone', models.CharField(max_length=32, verbose_name='رقم الهاتف')),
                ('address', models.TextField(blank=True, null=True, verbose_name='العنوان')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('phone_verified', models.BooleanField(default=False, verbose_name='تم التحقق من الهاتف')),
            ],
            options={
                'verbose_name': 'شركة',
                'verbose_name_plural': 'الشركات',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OTPVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=32, verbose_name='رقم الهاتف')),
                ('otp_code', models.CharField(max_length=6, verbose_name='رمز التحقق')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('expires_at', models.DateTimeField(verbose_name='تاريخ الانتهاء')),
                ('is_used', models.BooleanField(default=False, verbose_name='تم الاستخدام')),
                ('verification_type', models.CharField(choices=[('company_registration', 'تسجيل شركة'), ('user_registration', 'تسجيل مستخدم'), ('password_reset', 'إعادة تعيين كلمة المرور')], default='company_registration', max_length=20, verbose_name='نوع التحقق')),
            ],
            options={
                'verbose_name': 'تحقق OTP',
                'verbose_name_plural': 'تحققات OTP',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='اسم الفئة')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.category', verbose_name='الفئة الأب')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='app.company', verbose_name='الشركة')),
            ],
            options={
                'verbose_name': 'فئة',
                'verbose_name_plural': 'الفئات',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('account_type', models.CharField(choices=[('superuser', 'مدير النظام العام'), ('company_owner', 'مالك الشركة'), ('company_staff', 'موظف الشركة')], default='company_staff', max_length=20, verbose_name='نوع الحساب')),
                ('user_type', models.CharField(default='user', max_length=10)),
                ('role', models.CharField(default='staff', max_length=10)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='app.company', verbose_name='الشركة')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='اسم العميل')),
                ('phone', models.CharField(blank=True, max_length=32, null=True, verbose_name='رقم الهاتف')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='البريد الإلكتروني')),
                ('address', models.TextField(blank=True, null=True, verbose_name='العنوان')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='app.company', verbose_name='الشركة')),
            ],
            options={
                'verbose_name': 'عميل',
                'verbose_name_plural': 'العملاء',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='draft', max_length=16, verbose_name='الحالة')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='تاريخ الإنشاء')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='المبلغ الإجمالي')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='app.company', verbose_name='الشركة')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoices', to='app.customer', verbose_name='العميل')),
            ],
            options={
                'verbose_name': 'فاتورة',
                'verbose_name_plural': 'الفواتير',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='اسم المنتج')),
                ('sku', models.CharField(blank=True, max_length=64, null=True, verbose_name='رمز المنتج')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='السعر')),
                ('stock_qty', models.IntegerField(default=0, verbose_name='الكمية في المخزون')),
                ('qr_code', models.ImageField(blank=True, upload_to='qrcodes/', verbose_name='رمز QR')),
                ('unit', models.CharField(blank=True, choices=[('piece', 'عدد'), ('meter', 'متر'), ('kg', 'كيلو'), ('liter', 'لتر'), ('box', 'صندوق'), ('pack', 'عبوة'), ('roll', 'لفة'), ('sheet', 'ورقة'), ('other', 'أخرى')], default='piece', help_text='وحدة القياس', max_length=20, null=True, verbose_name='الوحدة')),
                ('measurement', models.CharField(blank=True, help_text='القياس (اختياري)', max_length=100, null=True, verbose_name='القياس')),
                ('description', models.TextField(blank=True, help_text='وصف المنتج (اختياري)', null=True, verbose_name='الوصف')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='app.category', verbose_name='الفئة')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='app.company', verbose_name='الشركة')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='الكمية')),
                ('price_at_add', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='السعر عند الإضافة')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='app.invoice', verbose_name='الفاتورة')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.product', verbose_name='المنتج')),
            ],
            options={
                'verbose_name': 'عنصر الفاتورة',
                'verbose_name_plural': 'عناصر الفاتورة',
                'ordering': ['-created_at'],
            },
        ),
    ]
