version: '3.8'

services:
  stockly-mcp:
    build: .
    container_name: stockly-mcp-server
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DJANGO_BASE_URL=https://stockly.encryptosystem.com
      - API_TOKEN=${API_TOKEN}
      - LOG_LEVEL=info
      - MCP_SERVER_PORT=3001
      - MCP_SERVER_HOST=0.0.0.0
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - stockly-network

  # Optional: n8n integration
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=password
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_METRICS=true
      - N8N_LOG_LEVEL=info
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n-workflows:/home/node/.n8n/workflows
    depends_on:
      - stockly-mcp
    restart: unless-stopped
    networks:
      - stockly-network

  # Optional: Redis for caching
  redis:
    image: redis:7-alpine
    container_name: stockly-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - stockly-network

volumes:
  n8n_data:
    driver: local
  redis_data:
    driver: local

networks:
  stockly-network:
    driver: bridge
